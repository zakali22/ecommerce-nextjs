{"ast":null,"code":"import _taggedTemplateLiteral from \"C:/Users/zak.ali/Desktop/ReactProjects/Advanced-React/sick-fits/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\zak.ali\\\\Desktop\\\\ReactProjects\\\\Advanced-React\\\\sick-fits\\\\frontend\\\\components\\\\Products\\\\UpdateProduct.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query PRODUCT_QUERY {\\n    Product(where: { id: \\\"6143bd3d72c88059a4a0d6c5\\\" }) {\\n      id\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport PropTypes from 'prop-types';\nimport { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nvar SINGLE_PRODUCT_QUERY = gql(_templateObject());\nexport default function UpdateProduct(_ref) {\n  var id = _ref.id;\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Update product: \", id]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 10\n  }, this);\n}\n_c = UpdateProduct;\nUpdateProduct.propTypes = {\n  id: PropTypes.string\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateProduct\");","map":{"version":3,"sources":["C:/Users/zak.ali/Desktop/ReactProjects/Advanced-React/sick-fits/frontend/components/Products/UpdateProduct.js"],"names":["PropTypes","useQuery","gql","SINGLE_PRODUCT_QUERY","UpdateProduct","id","propTypes","string"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AAEA,IAAMC,oBAAoB,GAAGD,GAAH,mBAA1B;AAQA,eAAe,SAASE,aAAT,OAA+B;AAAA,MAANC,EAAM,QAANA,EAAM;AAC5C,sBAAO;AAAA,mCAAoBA,EAApB;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;KAFuBD,a;AAIxBA,aAAa,CAACE,SAAd,GAA0B;AACxBD,EAAAA,EAAE,EAAEL,SAAS,CAACO;AADU,CAA1B","sourcesContent":["import PropTypes from 'prop-types';\r\nimport { useQuery } from '@apollo/client';\r\nimport gql from 'graphql-tag';\r\n\r\nconst SINGLE_PRODUCT_QUERY = gql`\r\n  query PRODUCT_QUERY {\r\n    Product(where: { id: \"6143bd3d72c88059a4a0d6c5\" }) {\r\n      id\r\n    }\r\n  }\r\n`;\r\n\r\nexport default function UpdateProduct({ id }) {\r\n  return <p>Update product: {id}</p>;\r\n}\r\n\r\nUpdateProduct.propTypes = {\r\n  id: PropTypes.string,\r\n};\r\n"]},"metadata":{},"sourceType":"module"}