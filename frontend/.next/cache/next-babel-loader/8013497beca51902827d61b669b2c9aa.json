{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useMutation } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport Router from 'next/router';\nimport useForm from '../lib/useForm';\nimport Form from './styles/Form';\nimport { ALL_PRODUCTS_QUERY } from './Products/ProductsListing';\nconst CREATE_PRODUCT_MUTATION = gql`\n  mutation CREATE_PRODUCT_MUTATION(\n    $name: String!\n    $description: String!\n    $status: String\n    $price: Int!\n    $image: Upload\n  ) {\n    createProduct(\n      data: {\n        name: $name\n        description: $description\n        status: $status\n        price: $price\n        photo: { create: { image: $image, altText: $name } }\n      }\n    ) {\n      id\n      name\n      description\n      status\n      price\n    }\n  }\n`;\nexport default function SellForm() {\n  const {\n    inputs,\n    handleInputChange,\n    clearForm,\n    resetForm\n  } = useForm({\n    name: '',\n    description: '',\n    price: 0,\n    image: ''\n  });\n  const [createProduct, {\n    data,\n    loading,\n    error\n  }] = useMutation(CREATE_PRODUCT_MUTATION, {\n    variables: inputs,\n    refetchQueries: [{\n      query: ALL_PRODUCTS_QUERY\n    }]\n  });\n  return /*#__PURE__*/_jsx(Form, {\n    onSubmit: async e => {\n      // handleSubmit(e);\n      e.preventDefault();\n      const res = await createProduct();\n      clearForm();\n      Router.push({\n        pathname: `/product/${res.data.createProduct.id}`\n      });\n    },\n    children: /*#__PURE__*/_jsxs(\"fieldset\", {\n      \"aria-busy\": loading,\n      disabled: loading,\n      children: [/*#__PURE__*/_jsxs(\"label\", {\n        htmlFor: \"image\",\n        children: [\"Image\", /*#__PURE__*/_jsx(\"input\", {\n          required: true,\n          id: \"image\",\n          name: \"image\",\n          type: \"file\",\n          onChange: e => handleInputChange(e)\n        })]\n      }), /*#__PURE__*/_jsxs(\"label\", {\n        htmlFor: \"name\",\n        children: [\"Name\", /*#__PURE__*/_jsx(\"input\", {\n          id: \"name\",\n          name: \"name\",\n          type: \"text\",\n          value: inputs.name,\n          placeholder: \"Enter name of product\",\n          onChange: e => handleInputChange(e)\n        })]\n      }), /*#__PURE__*/_jsxs(\"label\", {\n        htmlFor: \"price\",\n        children: [\"Price\", /*#__PURE__*/_jsx(\"input\", {\n          id: \"price\",\n          name: \"price\",\n          type: \"number\",\n          value: inputs.price,\n          placeholder: \"Enter price of product\",\n          onChange: e => handleInputChange(e)\n        })]\n      }), /*#__PURE__*/_jsxs(\"label\", {\n        htmlFor: \"description\",\n        children: [\"Description\", /*#__PURE__*/_jsx(\"textarea\", {\n          id: \"description\",\n          name: \"description\",\n          value: inputs.description,\n          placeholder: \"Enter description of product\",\n          onChange: e => handleInputChange(e)\n        })]\n      }), /*#__PURE__*/_jsx(\"button\", {\n        type: \"submit\",\n        children: \"+ Add product\"\n      }), /*#__PURE__*/_jsx(\"button\", {\n        type: \"submit\",\n        onClick: clearForm,\n        children: \"Clear form\"\n      }), /*#__PURE__*/_jsx(\"button\", {\n        type: \"submit\",\n        onClick: resetForm,\n        children: \"Reset form\"\n      })]\n    })\n  });\n}","map":null,"metadata":{},"sourceType":"module"}