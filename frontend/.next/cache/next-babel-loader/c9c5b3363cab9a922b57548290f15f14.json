{"ast":null,"code":"import _taggedTemplateLiteral from \"C:/Users/zak.ali/Desktop/ReactProjects/Advanced-React/sick-fits/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\zak.ali\\\\Desktop\\\\ReactProjects\\\\Advanced-React\\\\sick-fits\\\\frontend\\\\components\\\\Products\\\\UpdateProduct.js\",\n    _s = $RefreshSig$();\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation UPDATE_PRODUCT_MUTATION(\\n    $id: ID!\\n    $name: String\\n    $description: String\\n    $status: String\\n    $price: Int\\n    $image: Upload\\n  ) {\\n    updateProduct(\\n      id: $id\\n      data: {\\n        name: $name\\n        description: $description\\n        status: $status\\n        price: $price\\n        photo: { create: { image: $image, altText: $name } }\\n      }\\n    ) {\\n      id\\n      name\\n      description\\n      status\\n      price\\n      photo {\\n        id\\n        altText\\n        image {\\n          publicUrlTransformed\\n        }\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query PRODUCT_QUERY($id: ID!) {\\n    Product(where: { id: $id }) {\\n      id\\n      name\\n      description\\n      photo {\\n        id\\n        altText\\n        image {\\n          publicUrlTransformed\\n        }\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport PropTypes from 'prop-types';\nimport { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nvar SINGLE_PRODUCT_QUERY = gql(_templateObject());\nvar UPDATE_PRODUCT_MUTATION = gql(_templateObject2());\nexport default function UpdateProduct(_ref) {\n  _s();\n\n  var id = _ref.id;\n\n  var _useQuery = useQuery(SINGLE_PRODUCT_QUERY, {\n    variables: {\n      id: id\n    }\n  }),\n      data = _useQuery.data,\n      loading = _useQuery.loading,\n      error = _useQuery.error;\n\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 21\n  }, this);\n  console.log(data);\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Update product: \", id]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 10\n  }, this);\n}\n\n_s(UpdateProduct, \"tP+6C5plfRwxqCbBj3cMUcL7Opk=\", false, function () {\n  return [useQuery];\n});\n\n_c = UpdateProduct;\nUpdateProduct.propTypes = {\n  id: PropTypes.string\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateProduct\");","map":{"version":3,"sources":["C:/Users/zak.ali/Desktop/ReactProjects/Advanced-React/sick-fits/frontend/components/Products/UpdateProduct.js"],"names":["PropTypes","useQuery","gql","SINGLE_PRODUCT_QUERY","UPDATE_PRODUCT_MUTATION","UpdateProduct","id","variables","data","loading","error","console","log","propTypes","string"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AAEA,IAAMC,oBAAoB,GAAGD,GAAH,mBAA1B;AAiBA,IAAME,uBAAuB,GAAGF,GAAH,oBAA7B;AAmCA,eAAe,SAASG,aAAT,OAA+B;AAAA;;AAAA,MAANC,EAAM,QAANA,EAAM;;AAAA,kBACXL,QAAQ,CAACE,oBAAD,EAAuB;AAC9DI,IAAAA,SAAS,EAAE;AAAED,MAAAA,EAAE,EAAFA;AAAF;AADmD,GAAvB,CADG;AAAA,MACpCE,IADoC,aACpCA,IADoC;AAAA,MAC9BC,OAD8B,aAC9BA,OAD8B;AAAA,MACrBC,KADqB,aACrBA,KADqB;;AAK5C,MAAID,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACb,MAAIC,KAAJ,EAAW,oBAAO;AAAA,0BAAWA,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAEXC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;AAEA,sBAAO;AAAA,mCAAoBF,EAApB;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;GAXuBD,a;UACWJ,Q;;;KADXI,a;AAaxBA,aAAa,CAACQ,SAAd,GAA0B;AACxBP,EAAAA,EAAE,EAAEN,SAAS,CAACc;AADU,CAA1B","sourcesContent":["import PropTypes from 'prop-types';\r\nimport { useQuery } from '@apollo/client';\r\nimport gql from 'graphql-tag';\r\n\r\nconst SINGLE_PRODUCT_QUERY = gql`\r\n  query PRODUCT_QUERY($id: ID!) {\r\n    Product(where: { id: $id }) {\r\n      id\r\n      name\r\n      description\r\n      photo {\r\n        id\r\n        altText\r\n        image {\r\n          publicUrlTransformed\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst UPDATE_PRODUCT_MUTATION = gql`\r\n  mutation UPDATE_PRODUCT_MUTATION(\r\n    $id: ID!\r\n    $name: String\r\n    $description: String\r\n    $status: String\r\n    $price: Int\r\n    $image: Upload\r\n  ) {\r\n    updateProduct(\r\n      id: $id\r\n      data: {\r\n        name: $name\r\n        description: $description\r\n        status: $status\r\n        price: $price\r\n        photo: { create: { image: $image, altText: $name } }\r\n      }\r\n    ) {\r\n      id\r\n      name\r\n      description\r\n      status\r\n      price\r\n      photo {\r\n        id\r\n        altText\r\n        image {\r\n          publicUrlTransformed\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default function UpdateProduct({ id }) {\r\n  const { data, loading, error } = useQuery(SINGLE_PRODUCT_QUERY, {\r\n    variables: { id },\r\n  });\r\n\r\n  if (loading) return <p>Loading</p>;\r\n  if (error) return <p>Error: {error}</p>;\r\n\r\n  console.log(data);\r\n\r\n  return <p>Update product: {id}</p>;\r\n}\r\n\r\nUpdateProduct.propTypes = {\r\n  id: PropTypes.string,\r\n};\r\n"]},"metadata":{},"sourceType":"module"}