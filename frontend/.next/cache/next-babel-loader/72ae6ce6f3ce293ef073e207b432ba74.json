{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\zak.ali\\\\Desktop\\\\ReactProjects\\\\Advanced-React\\\\sick-fits\\\\frontend\\\\components\\\\Products\\\\UpdateProduct.js\";\nimport PropTypes from 'prop-types';\nimport { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nconst SINGLE_PRODUCT_QUERY = gql`\n  query PRODUCT_QUERY($id: ID!) {\n    Product(where: { id: $id }) {\n      id\n      name\n      description\n      photo {\n        id\n        altText\n        image {\n          publicUrlTransformed\n        }\n      }\n    }\n  }\n`;\nconst UPDATE_SINGLE_PRODUCT_MUTATION = gql`\n  mutation {\n    updateProduct(id: \"$id\", data: { name: \"\" }) {\n      id\n      name\n      description\n      status\n      price\n      photo {\n        id\n        altText\n        image {\n          publicUrlTransformed\n        }\n      }\n    }\n  }\n`;\nexport default function UpdateProduct({\n  id\n}) {\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(SINGLE_PRODUCT_QUERY, {\n    variables: {\n      id\n    }\n  });\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 21\n  }, this);\n  console.log(data);\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Update product: \", id]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 10\n  }, this);\n}\nUpdateProduct.propTypes = {\n  id: PropTypes.string\n};","map":{"version":3,"sources":["C:/Users/zak.ali/Desktop/ReactProjects/Advanced-React/sick-fits/frontend/components/Products/UpdateProduct.js"],"names":["PropTypes","useQuery","gql","SINGLE_PRODUCT_QUERY","UPDATE_SINGLE_PRODUCT_MUTATION","UpdateProduct","id","data","loading","error","variables","console","log","propTypes","string"],"mappings":";;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AAEA,MAAMC,oBAAoB,GAAGD,GAAI;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAfA;AAiBA,MAAME,8BAA8B,GAAGF,GAAI;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAjBA;AAmBA,eAAe,SAASG,aAAT,CAAuB;AAAEC,EAAAA;AAAF,CAAvB,EAA+B;AAC5C,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA;AAAjB,MAA2BR,QAAQ,CAACE,oBAAD,EAAuB;AAC9DO,IAAAA,SAAS,EAAE;AAAEJ,MAAAA;AAAF;AADmD,GAAvB,CAAzC;AAIA,MAAIE,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACb,MAAIC,KAAJ,EAAW,oBAAO;AAAA,0BAAWA,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAEXE,EAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ;AAEA,sBAAO;AAAA,mCAAoBD,EAApB;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;AAEDD,aAAa,CAACQ,SAAd,GAA0B;AACxBP,EAAAA,EAAE,EAAEN,SAAS,CAACc;AADU,CAA1B","sourcesContent":["import PropTypes from 'prop-types';\r\nimport { useQuery } from '@apollo/client';\r\nimport gql from 'graphql-tag';\r\n\r\nconst SINGLE_PRODUCT_QUERY = gql`\r\n  query PRODUCT_QUERY($id: ID!) {\r\n    Product(where: { id: $id }) {\r\n      id\r\n      name\r\n      description\r\n      photo {\r\n        id\r\n        altText\r\n        image {\r\n          publicUrlTransformed\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst UPDATE_SINGLE_PRODUCT_MUTATION = gql`\r\n  mutation {\r\n    updateProduct(id: \"$id\", data: { name: \"\" }) {\r\n      id\r\n      name\r\n      description\r\n      status\r\n      price\r\n      photo {\r\n        id\r\n        altText\r\n        image {\r\n          publicUrlTransformed\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default function UpdateProduct({ id }) {\r\n  const { data, loading, error } = useQuery(SINGLE_PRODUCT_QUERY, {\r\n    variables: { id },\r\n  });\r\n\r\n  if (loading) return <p>Loading</p>;\r\n  if (error) return <p>Error: {error}</p>;\r\n\r\n  console.log(data);\r\n\r\n  return <p>Update product: {id}</p>;\r\n}\r\n\r\nUpdateProduct.propTypes = {\r\n  id: PropTypes.string,\r\n};\r\n"]},"metadata":{},"sourceType":"module"}