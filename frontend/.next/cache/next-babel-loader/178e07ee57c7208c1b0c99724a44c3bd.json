{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\zak.ali\\\\Desktop\\\\ReactProjects\\\\Advanced-React\\\\sick-fits\\\\frontend\\\\components\\\\SellForm.tsx\";\nimport { useMutation } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport useForm from '../lib/useForm';\nimport Form from './styles/Form';\nimport { ALL_PRODUCTS_QUERY } from './Products/ProductsListing';\nconst CREATE_PRODUCT_MUTATION = gql`\n  mutation CREATE_PRODUCT_MUTATION(\n    $name: String!\n    $description: String!\n    $status: String\n    $price: Int!\n    $image: Upload\n  ) {\n    createProduct(\n      data: {\n        name: $name\n        description: $description\n        status: $status\n        price: $price\n        photo: { create: { image: $image, altText: $name } }\n      }\n    ) {\n      id\n      name\n      description\n      status\n      price\n    }\n  }\n`;\nexport default function SellForm() {\n  const {\n    inputs,\n    handleInputChange,\n    clearForm,\n    resetForm\n  } = useForm({\n    name: '',\n    description: '',\n    price: 0,\n    image: ''\n  });\n  const [createProduct, {\n    data,\n    loading,\n    error\n  }] = useMutation(CREATE_PRODUCT_MUTATION, {\n    variables: inputs,\n    refetchQueries: [{\n      query: ALL_PRODUCTS_QUERY\n    }]\n  });\n  console.log(data.createProduct.id);\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: async e => {\n      // handleSubmit(e);\n      e.preventDefault();\n      await createProduct();\n      clearForm(); // Router.push({\n      //   pathname: `/products/${data.createProduct.id}`,\n      // });\n    },\n    children: /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      \"aria-busy\": loading,\n      disabled: loading,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"image\",\n        children: [\"Image\", /*#__PURE__*/_jsxDEV(\"input\", {\n          required: true,\n          id: \"image\",\n          name: \"image\",\n          type: \"file\",\n          onChange: e => handleInputChange(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: [\"Name\", /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"name\",\n          name: \"name\",\n          type: \"text\",\n          value: inputs.name,\n          placeholder: \"Enter name of product\",\n          onChange: e => handleInputChange(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"price\",\n        children: [\"Price\", /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"price\",\n          name: \"price\",\n          type: \"number\",\n          value: inputs.price,\n          placeholder: \"Enter price of product\",\n          onChange: e => handleInputChange(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"description\",\n        children: [\"Description\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"description\",\n          name: \"description\",\n          value: inputs.description,\n          placeholder: \"Enter description of product\",\n          onChange: e => handleInputChange(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"+ Add product\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        onClick: clearForm,\n        children: \"Clear form\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        onClick: resetForm,\n        children: \"Reset form\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["C:/Users/zak.ali/Desktop/ReactProjects/Advanced-React/sick-fits/frontend/components/SellForm.tsx"],"names":["useMutation","gql","useForm","Form","ALL_PRODUCTS_QUERY","CREATE_PRODUCT_MUTATION","SellForm","inputs","handleInputChange","clearForm","resetForm","name","description","price","image","createProduct","data","loading","error","variables","refetchQueries","query","console","log","id","e","preventDefault"],"mappings":"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","sourcesContent":["import { useMutation } from '@apollo/client';\r\nimport gql from 'graphql-tag';\r\nimport Router from 'next/router';\r\nimport useForm from '../lib/useForm';\r\nimport Form from './styles/Form';\r\nimport { ALL_PRODUCTS_QUERY } from './Products/ProductsListing';\r\n\r\nconst CREATE_PRODUCT_MUTATION = gql`\r\n  mutation CREATE_PRODUCT_MUTATION(\r\n    $name: String!\r\n    $description: String!\r\n    $status: String\r\n    $price: Int!\r\n    $image: Upload\r\n  ) {\r\n    createProduct(\r\n      data: {\r\n        name: $name\r\n        description: $description\r\n        status: $status\r\n        price: $price\r\n        photo: { create: { image: $image, altText: $name } }\r\n      }\r\n    ) {\r\n      id\r\n      name\r\n      description\r\n      status\r\n      price\r\n    }\r\n  }\r\n`;\r\n\r\nexport default function SellForm() {\r\n  const { inputs, handleInputChange, clearForm, resetForm } = useForm({\r\n    name: '',\r\n    description: '',\r\n    price: 0,\r\n    image: '',\r\n  });\r\n\r\n  const [createProduct, { data, loading, error }] = useMutation(\r\n    CREATE_PRODUCT_MUTATION,\r\n    {\r\n      variables: inputs,\r\n      refetchQueries: [{ query: ALL_PRODUCTS_QUERY }],\r\n    }\r\n  );\r\n\r\n  console.log(data.createProduct.id);\r\n\r\n  return (\r\n    <Form\r\n      onSubmit={async (e) => {\r\n        // handleSubmit(e);\r\n        e.preventDefault();\r\n        await createProduct();\r\n        clearForm();\r\n        // Router.push({\r\n        //   pathname: `/products/${data.createProduct.id}`,\r\n        // });\r\n      }}\r\n    >\r\n      <fieldset aria-busy={loading} disabled={loading}>\r\n        <label htmlFor=\"image\">\r\n          Image\r\n          <input\r\n            required\r\n            id=\"image\"\r\n            name=\"image\"\r\n            type=\"file\"\r\n            onChange={(e) => handleInputChange(e)}\r\n          />\r\n        </label>\r\n        <label htmlFor=\"name\">\r\n          Name\r\n          <input\r\n            id=\"name\"\r\n            name=\"name\"\r\n            type=\"text\"\r\n            value={inputs.name}\r\n            placeholder=\"Enter name of product\"\r\n            onChange={(e) => handleInputChange(e)}\r\n          />\r\n        </label>\r\n        <label htmlFor=\"price\">\r\n          Price\r\n          <input\r\n            id=\"price\"\r\n            name=\"price\"\r\n            type=\"number\"\r\n            value={inputs.price}\r\n            placeholder=\"Enter price of product\"\r\n            onChange={(e) => handleInputChange(e)}\r\n          />\r\n        </label>\r\n        <label htmlFor=\"description\">\r\n          Description\r\n          <textarea\r\n            id=\"description\"\r\n            name=\"description\"\r\n            value={inputs.description}\r\n            placeholder=\"Enter description of product\"\r\n            onChange={(e) => handleInputChange(e)}\r\n          />\r\n        </label>\r\n        <button type=\"submit\">+ Add product</button>\r\n        <button type=\"submit\" onClick={clearForm}>\r\n          Clear form\r\n        </button>\r\n        <button type=\"submit\" onClick={resetForm}>\r\n          Reset form\r\n        </button>\r\n      </fieldset>\r\n    </Form>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}