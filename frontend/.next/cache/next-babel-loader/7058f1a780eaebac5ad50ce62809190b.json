{"ast":null,"code":"import _taggedTemplateLiteral from \"C:/Users/zak.ali/Desktop/ReactProjects/Advanced-React/sick-fits/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\zak.ali\\\\Desktop\\\\ReactProjects\\\\Advanced-React\\\\sick-fits\\\\frontend\\\\pages\\\\product\\\\[id].js\",\n    _s = $RefreshSig$();\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query PRODUCT_QUERY($id: ID!) {\\n    Product(where: { id: $id }) {\\n      id\\n      name\\n      description\\n      photo {\\n        id\\n        altText\\n        image {\\n          publicUrlTransformed\\n        }\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport PropTypes from 'prop-types';\nimport { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nvar PRODUCT_QUERY = gql(_templateObject());\nexport default function SingleProduct(_ref) {\n  _s();\n\n  var query = _ref.query;\n\n  var _useQuery = useQuery(PRODUCT_QUERY, {\n    variables: {\n      id: query.id\n    }\n  }),\n      data = _useQuery.data,\n      loading = _useQuery.loading,\n      error = _useQuery.error;\n\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Error\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 21\n  }, this);\n  console.log(data);\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Product id: \", query.id]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 10\n  }, this);\n}\n\n_s(SingleProduct, \"tP+6C5plfRwxqCbBj3cMUcL7Opk=\", false, function () {\n  return [useQuery];\n});\n\n_c = SingleProduct;\nSingleProduct.propTypes = {\n  query: PropTypes.object\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"SingleProduct\");","map":{"version":3,"sources":["C:/Users/zak.ali/Desktop/ReactProjects/Advanced-React/sick-fits/frontend/pages/product/[id].js"],"names":["PropTypes","useQuery","gql","PRODUCT_QUERY","SingleProduct","query","variables","id","data","loading","error","console","log","propTypes","object"],"mappings":";;;;;;;;;;;;;;;;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AAEA,IAAMC,aAAa,GAAGD,GAAH,mBAAnB;AAiBA,eAAe,SAASE,aAAT,OAAkC;AAAA;;AAAA,MAATC,KAAS,QAATA,KAAS;;AAAA,kBACdJ,QAAQ,CAACE,aAAD,EAAgB;AACvDG,IAAAA,SAAS,EAAE;AAAEC,MAAAA,EAAE,EAAEF,KAAK,CAACE;AAAZ;AAD4C,GAAhB,CADM;AAAA,MACvCC,IADuC,aACvCA,IADuC;AAAA,MACjCC,OADiC,aACjCA,OADiC;AAAA,MACxBC,KADwB,aACxBA,KADwB;;AAK/C,MAAID,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACb,MAAIC,KAAJ,EAAW,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAEXC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;AACA,sBAAO;AAAA,+BAAgBH,KAAK,CAACE,EAAtB;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;GAVuBH,a;UACWH,Q;;;KADXG,a;AAYxBA,aAAa,CAACS,SAAd,GAA0B;AACxBR,EAAAA,KAAK,EAAEL,SAAS,CAACc;AADO,CAA1B","sourcesContent":["import PropTypes from 'prop-types';\r\nimport { useQuery } from '@apollo/client';\r\nimport gql from 'graphql-tag';\r\n\r\nconst PRODUCT_QUERY = gql`\r\n  query PRODUCT_QUERY($id: ID!) {\r\n    Product(where: { id: $id }) {\r\n      id\r\n      name\r\n      description\r\n      photo {\r\n        id\r\n        altText\r\n        image {\r\n          publicUrlTransformed\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default function SingleProduct({ query }) {\r\n  const { data, loading, error } = useQuery(PRODUCT_QUERY, {\r\n    variables: { id: query.id },\r\n  });\r\n\r\n  if (loading) return <p>Loading</p>;\r\n  if (error) return <p>Error</p>;\r\n\r\n  console.log(data);\r\n  return <p>Product id: {query.id}</p>;\r\n}\r\n\r\nSingleProduct.propTypes = {\r\n  query: PropTypes.object,\r\n};\r\n"]},"metadata":{},"sourceType":"module"}